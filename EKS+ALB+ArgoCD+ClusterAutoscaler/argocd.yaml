apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: argocd-server-ingress
  namespace: argocd
  annotations:
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/backend-protocol: "HTTPS"
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
spec:
  ingressClassName: nginx
  tls:
    - hosts:
      - argocd.skanth306.shop
      secretName: skanth306-shop-tls  # cert-manager will create this secret
  rules:
    - host: argocd.skanth306.shop
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: argocd-server
                port:
                  number: 443


# This is working
# apiVersion: networking.k8s.io/v1
# kind: Ingress
# metadata:
#   name: argocd-server-ingress
#   namespace: argocd
#   annotations:
#     nginx.ingress.kubernetes.io/ssl-redirect: "false"
#     nginx.ingress.kubernetes.io/backend-protocol: "HTTP"
#     nginx.ingress.kubernetes.io/force-ssl-redirect: "false"
# spec:
#   ingressClassName: nginx
#   rules:
#     - host: argocd.example.com
#       http:
#         paths:
#           - path: /
#             pathType: Prefix
#             backend:
#               service:
#                 name: argocd-server
#                 port:
#                   number: 80

# üîê Note: If you later want to enable HTTPS, remove ssl-redirect: "false" and configure TLS properly with a cert.













# apiVersion: networking.k8s.io/v1
# kind: Ingress
# metadata:
#   name: argocd-ingress
#   namespace: argocd
#   annotations:
#     alb.ingress.kubernetes.io/scheme: internet-facing
#     alb.ingress.kubernetes.io/listen-ports: '[{"HTTP": 80}, {"HTTPS": 443}]'
#     alb.ingress.kubernetes.io/target-type: ip
#     alb.ingress.kubernetes.io/backend-protocol: HTTP
#     alb.ingress.kubernetes.io/group.name: dev
#     alb.ingress.kubernetes.io/certificate-arn: arn:aws:acm:us-east-1:608782704145:certificate/xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx # <-- Replace this with your actual ACM cert ARN
#     alb.ingress.kubernetes.io/ssl-redirect: "443"

# spec:
#   ingressClassName: alb
#   rules:
#     - host: argocd.skanth306.shop
#       http:
#         paths:
#           - path: /
#             pathType: Prefix
#             backend:
#               service:
#                 name: argocd-server
#                 port:
#                   number: 80





# # apiVersion: networking.k8s.io/v1
# # kind: Ingress
# # metadata:
# #   name: argocd-ingress
# #   namespace: argocd
# #   annotations:
# #     alb.ingress.kubernetes.io/scheme: internet-facing
# #     alb.ingress.kubernetes.io/listen-ports: '[{"HTTPS": 443}]'
# #     alb.ingress.kubernetes.io/target-type: ip
# #     alb.ingress.kubernetes.io/backend-protocol: HTTP
# #     alb.ingress.kubernetes.io/group.name: dev
# #     # cert-manager.io/cluster-issuer: "letsencrypt-prod"
# # spec:
# #   ingressClassName: alb
# #   tls:
# #     - hosts:
# #         - argocd.skanth306.shop # Replace with your domain name
# #       secretName: skanth306-shop-tls  # certificate secret name
# #   rules:
# #     - host: argocd.skanth306.shop # Replace with your domain name
# #       http:
# #         paths:
# #           - path: / # argocd will work only in / , not working /argocd
# #             pathType: Prefix
# #             backend:
# #               service:
# #                 name: argocd-server
# #                 port:
# #                   number: 80 # Use port 80 if the service exposes HTTP